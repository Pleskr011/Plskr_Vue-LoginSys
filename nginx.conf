worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    # If you are reverse proxying an API
    upstream api {
        server backend:8000;
    }

    server {
        listen 80;

        server_name _;
        server_tokens off;
        client_max_body_size 20M;

        # Serve the main app
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Serve runtime environment variables as config.js
        location /config.js {
            root /usr/share/nginx/html;
            default_type application/javascript;
        }

        #location /cache {
        #    try_files $uri @proxy_api;
        #}
    
        location /sec { 
        #proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Url-Scheme $scheme;
        #proxy_set_header content-type "application/json";
        proxy_redirect off;
        #proxy_cache_bypass $http_upgrade;
        #proxy_set_header Connection 'upgrade';
        # If you have any long running API calls, the read timeout needs to be increased here
        # proxy_read_timeout 120s;
        proxy_pass http://api;
        }

        #location @proxy_api {
        #    proxy_set_header X-Forwarded-Proto https;
        #    proxy_set_header X-Url-Scheme $scheme;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header Host $http_host;
        #    proxy_redirect off;
        #    proxy_pass   http://backend:8000;
        #}
    }
}